name: CICD pipeline
on:
  push:
  workflow_dispatch:
  
env:
  docker_username: andreas528
  docker_password: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMIT: ${{ github.sha }}
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build code
        run: |
            cd frontend
            go build
      - name: upload code
        uses: actions/upload-artifact@v4
        with: 
          name: code
          path: .
          include-hidden-files: true
  
  Testing:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Download code
        uses: actions/download-artifact@v5
        with:
          name: code
          path: .
      - name: Testing
        run: |
            cd frontend
            go test

  Linting:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Download code
        uses: actions/download-artifact@v5
        with: 
          name: code
          path: .
      - name: Linting
        uses: super-linter/super-linter/slim@v8
        env:
          DEFAULT_BRANCH: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISABLE_ERRORS: true

  Docker-image:
    runs-on: ubuntu-latest
    needs: [Testing]
    permissions:
      packages: write
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Build Docker
        run: bash ci/build-docker.sh
      - name: Push Docker
        run: bash ci/push-docker.sh

  Security-Scan:
    runs-on: ubuntu-latest
    needs: [Docker-image]
    steps:
      - name: Find Docker image tag
        id: short-sha-finder
        run: echo ${{ github.sha }} | { var=$(cat); echo "SHORT_SHA=${var::8}"; } >> "$GITHUB_OUTPUT"
      - name: Run Trivy vulnerability scanner on frontend
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: 'ghcr.io/andreas528/simple-fortune-cookie/frontend:1.0-${{ steps.short-sha-finder.outputs.SHORT_SHA }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      - name: Run Trivy vulnerability scanner on backend
        uses: aquasecurity/trivy-action@0.32.0
        with:
          image-ref: 'ghcr.io/andreas528/simple-fortune-cookie/frontend:1.0-${{ steps.short-sha-finder.outputs.SHORT_SHA }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
  
  
  Deploy:
    runs-on: ubuntu-latest
    needs: [Functional-test, Linting, Security-Scan]
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Deploy on Kubernetes
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
          kubectl --kubeconfig kubeconfig apply -f ./kubernetes

  Functional-test:
    runs-on: ubuntu-latest
    needs: [Docker-image]
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Deploy using Compose
        run: |
          docker compose up -d
      - name: Test
        run: |
          sleep 5
          curl -f -LI localhost:8080
        
        
